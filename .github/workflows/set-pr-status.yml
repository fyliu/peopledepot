name: Add PR to Project and Set Status

on:
  pull_request:
    types: [opened]

jobs:
  add-to-project:
    runs-on: ubuntu-latest
    steps:
      - name: Add PR to project and set status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_TOKEN }}   # <-- must be PAT with project access
          script: |
            const PROJECT_NUMBER = 23; // change to your project number
            const ORG = "fyliu";     // change to your org/user name
            const TARGET_STATUS_PREFIX = "PR Needs Review";

            // 1. Get the project
            const { organization } = await github.graphql(`
              query($org: String!, $number: Int!) {
                organization(login: $org) {
                  projectV2(number: $number) {
                    id
                    title
                    fields(first: 50) {
                      nodes {
                        ... on ProjectV2FieldCommon {
                          id
                          name
                        }
                        ... on ProjectV2SingleSelectField {
                          id
                          name
                          options {
                            id
                            name
                          }
                        }
                      }
                    }
                  }
                }
              }`,
              { org: ORG, number: PROJECT_NUMBER }
            );

            const project = organization.projectV2;
            console.log(`üéØ Found project: ${project.title}`);

            // 2. Find the "Status" field
            const statusField = project.fields.nodes.find(f => f.name === "Status");
            if (!statusField) {
              throw new Error("‚ùå Could not find 'Status' field in the project.");
            }

            // 3. Find matching status option
            const targetOption = statusField.options.find(o =>
              o.name.startsWith(TARGET_STATUS_PREFIX)
            );

            if (!targetOption) {
              console.log(`‚ö†Ô∏è Could not find a status starting with "${TARGET_STATUS_PREFIX}"`);
              console.log("Available statuses are:");
              for (const o of statusField.options) {
                console.log(`- ${o.name}`);
              }
              throw new Error("‚ùå Target status not found.");
            }

            console.log(`‚úÖ Using status: ${targetOption.name} (id: ${targetOption.id})`);

            // 4. Add the PR to the project
            const prId = context.payload.pull_request.node_id;

            const addItem = await github.graphql(`
              mutation($projectId:ID!, $prId:ID!) {
                addProjectV2ItemById(input:{projectId:$projectId, contentId:$prId}) {
                  item { id }
                }
              }`,
              { projectId: project.id, prId }
            );

            const itemId = addItem.addProjectV2ItemById.item.id;

            // 5. Set the status field
            await github.graphql(`
              mutation($projectId: ID!, $itemId: ID!, $fieldId: ID!, $optionId: String!) {
                updateProjectV2ItemFieldValue(input: {
                  projectId: $projectId,
                  itemId: $itemId,
                  fieldId: $fieldId,
                  value: { singleSelectOptionId: $optionId }
                }) {
                  projectV2Item { id }
                }
              }`,
              {
                projectId: project.id,
                itemId,
                fieldId: statusField.id,
                optionId: targetOption.id
              }
            );

            console.log(`üéâ PR added to project '${project.title}' with status '${targetOption.name}'`);
